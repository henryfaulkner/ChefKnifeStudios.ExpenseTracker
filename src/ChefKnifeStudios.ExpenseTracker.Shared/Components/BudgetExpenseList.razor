@using Microsoft.AspNetCore.Components.QuickGrid

<div class="budget-expense-list">
    @if (SearchViewModel.IsLoading)
    {
        <MatBody1>Loading...</MatBody1>
    }
    else
    {
        @* Use https://www.matblazor.com/ExpansionPanel for budget list *@
        <MatAccordion Multi="true">
            @foreach (var budget in SearchViewModel.Budgets ?? [])
            {
                <MatExpansionPanel>
                    <MatExpansionPanelSummary>
                        <MatExpansionPanelHeader>@budget.Name</MatExpansionPanelHeader>
                        <MatExpansionPanelSubHeader>
                            @{
                                string str = $"{(budget.ExpenseDTOs?.Sum(x => x.Cost) ?? decimal.Zero).FormatAsDollar()} / {@budget.ExpenseBudget.FormatAsDollar()}";
                            }
                            <div class="panel-subheader">
                                <MatBody2 style="margin: 0;">@str</MatBody2>
                                <button @onclick="() => HandleEditBudgetPressed(budget)" @onclick:stopPropagation="true">
                                    <MatIcon 
                                        Class="edit-budget-icon"
                                        Icon="edit" 
                                    />
                                </button>
                            </div>
                        </MatExpansionPanelSubHeader>
                    </MatExpansionPanelSummary>
                    <MatExpansionPanelDetails>
                        @if (budget.ExpenseDTOs != null && budget.ExpenseDTOs.Any())
                        {
                            <MatTable Items="budget.ExpenseDTOs.OrderByDescending(x => x.Id)">
                                <MatTableHeader>
                                    <th style="min-width: 225px; width: 100%;">Name</th>
                                    <th style="min-width: 150px; width: 100%; text-align: right;">Cost</th>
                                    <th style="max-width: 10px;"></th>
                                </MatTableHeader>
                                <MatTableRow>
                                    <td>
                                        <div class="name-column-row">
                                            @context.Name 
                                            @if (@context.IsRecurring)
                                            {
                                                <MatIcon 
                                                    Icon="autorenew"
                                                    Class="clr-1s is-recurring-label-icon" 
                                                />    
                                            }
                                        </div>
                                    </td>
                                    <td style="text-align: right;">
                                        @context.Cost.FormatAsDollar()
                                    </td>
                                    <td style="padding: 0rem;">
                                        <MatIconButton Class="delete-expense-btn" Icon="delete" OnClick="() => HandleDeleteExpensePressed(context)" />
                                    </td>
                                </MatTableRow>
                            </MatTable>
                        }
                        else
                        {
                            <MatBody1>No expenses available for this budget.</MatBody1>
                        }
                    </MatExpansionPanelDetails>
                </MatExpansionPanel>
            }
        </MatAccordion>
    }
</div>