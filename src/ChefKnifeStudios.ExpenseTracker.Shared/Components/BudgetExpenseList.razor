@using Microsoft.AspNetCore.Components.QuickGrid

<div class="budget-expense-list">
    @if (SearchViewModel.IsLoading)
    {
        <MatBody1>Loading...</MatBody1>
    }
    else
    {
        @* Use https://www.matblazor.com/ExpansionPanel for budget list *@
        <MatAccordion Multi="true">
            @foreach (var budget in SearchViewModel.Budgets ?? [])
            {
                <MatExpansionPanel>
                    <MatExpansionPanelSummary>
                        <MatExpansionPanelHeader>@budget.Name</MatExpansionPanelHeader>
                        <MatExpansionPanelSubHeader>
                            @{
                                string str = $"{FormatAsDollar(budget.ExpenseDTOs?.Sum(x => x.Cost) ?? 0.0m)} / {@FormatAsDollar(budget.ExpenseBudget)}";
                            }
                            <MatBody2 style="margin: 0;">@str</MatBody2>
                        </MatExpansionPanelSubHeader>
                    </MatExpansionPanelSummary>
                    <MatExpansionPanelDetails>
                        @if (budget.ExpenseDTOs != null && budget.ExpenseDTOs.Any())
                        {
                            <MatTable Items="budget.ExpenseDTOs.OrderByDescending(x => x.Id)">
                                <MatTableHeader>
                                    <th>Name</th>
                                    <th>Cost</th>
                                </MatTableHeader>
                                <MatTableRow>
                                    <td>@context.Name</td>
                                    <td>@FormatAsDollar(context.Cost)</td>
                                </MatTableRow>
                            </MatTable>
                        }
                        else
                        {
                            <MatBody1>No expenses available for this budget.</MatBody1>
                        }
                    </MatExpansionPanelDetails>
                </MatExpansionPanel>
            }
        </MatAccordion>
    }
</div>